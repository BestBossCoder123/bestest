([[
  
  This script has been obfuscated with Zelt's Obfuscator v1

          _ _   _       _           _     
         | | | ( )     | |         | |    
  _______| | |_|/ ___  | |__  _   _| |__  
 |_  / _ \ | __| / __| | '_ \| | | | '_ \ 
  / /  __/ | |_  \__ \ | | | | |_| | |_) |
 /___\___|_|\__| |___/ |_| |_|\__,_|_.__/ 
  
  
  
           Script ID: vq45v1bf64r1mbmq2oxvow633zs9g85              
]])

return (function()local zeltlIIIIlIl = "\122\101\108\116";local zeltlIIIIlIl = "\122\101\108\116";local zeltlIIIIlIl = "\122\101\108\116";local zeltlIIllllI=47;local zeltlIIlllIl=298;local zeltlIIlllII=3;local zeltlIIlIllI=function(a)local b='ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/';a=string.gsub(a,'[^'..b..'=]','')return a:gsub('.',function(c)if c=='='then return''end;local d,e='',b:find(c)-1;for f=6,1,-1 do d=d..(e%2^f-e%2^(f-1)>0 and'1'or'0')end;return d end):gsub('%d%d%d?%d?%d?%d?%d?%d?',function(c)if#c~=8 then return''end;local g=0;for f=1,8 do g=g+(c:sub(f,f)=='1'and 2^(8-f)or 0)end;return string.char(g)end)end;local zeltlIIlllIl=45;local zeltlIIlIlIl=(function()local function a(b)local c={}for d=0,255 do c[d]={}end;c[0][0]=b[1]*255;local e=1;for f=0,7 do for d=0,e-1 do for g=0,e-1 do local h=c[d][g]-b[1]*e;c[d][g+e]=h+b[2]*e;c[d+e][g]=h+b[3]*e;c[d+e][g+e]=h+b[4]*e end end;e=e*2 end;return c end;local i=a{0,1,1,0}local function j(self,k)local l,d,g=self.S,self.i,self.j;local m={}local n=string.char;for o=1,k do d=(d+1)%256;g=(g+l[d])%256;l[d],l[g]=l[g],l[d]m[o]=n(l[(l[d]+l[g])%256])end;self.i,self.j=d,g;return table.concat(m)end;local function p(self,q)local r=j(self,#q)local s={}local t=string.byte;local n=string.char;for d=1,#q do s[d]=n(i[t(q,d)][t(r,d)])end;return table.concat(s)end;local function u(self,v)local l=self.S;local g,w=0,#v;local t=string.byte;for d=0,255 do g=(g+l[d]+t(v,d%w+1))%256;l[d],l[g]=l[g],l[d]end end;function new(v)local l={}local s={S=l,i=0,j=0,generate=j,cipher=p,schedule=u}for d=0,255 do l[d]=d end;if v then s:schedule(v)end;return s end;return new end)();local fev=getfenv or function()return _ENV end;local zeltlIIlIlII=(function()if not bit then local bit_=nil pcall(function()bit_=require('bit') end)bit=bit_ end local bit=bit or bit32 or(function()local a={_TYPE='module',_NAME='bit.numberlua',_VERSION='0.3.1.20120131'}local b=math.floor;local c=2^32;local d=c-1;local function e(f)local g={}local h=setmetatable({},g)function g:__index(i)local j=f(i)h[i]=j;return j end;return h end;local function k(h,l)local function m(n,o)local p,q=0,1;while n~=0 and o~=0 do local r,s=n%l,o%l;p=p+h[r][s]*q;n=(n-r)/l;o=(o-s)/l;q=q*l end;p=p+(n+o)*q;return p end;return m end;local function t(h)local u=k(h,2^1)local v=e(function(n)return e(function(o)return u(n,o)end)end)return k(v,2^(h.n or 1))end;function a.tobit(w)return w%2^32 end;a.bxor=t{[0]={[0]=0,[1]=1},[1]={[0]=1,[1]=0},n=4}local x=a.bxor;function a.bnot(n)return d-n end;local y=a.bnot;function a.band(n,o)return(n+o-x(n,o))/2 end;local z=a.band;function a.bor(n,o)return d-z(d-n,d-o)end;local A=a.bor;local B,C;function a.rshift(n,D)if D<0 then return B(n,-D)end;return b(n%2^32/2^D)end;C=a.rshift;function a.lshift(n,D)if D<0 then return C(n,-D)end;return n*2^D%2^32 end;B=a.lshift;function a.tohex(w,E)E=E or 8;local F;if E<=0 then if E==0 then return''end;F=true;E=-E end;w=z(w,16^E-1)return('%0'..E..(F and'X'or'x')):format(w)end;local G=a.tohex;function a.extract(E,H,I)I=I or 1;return z(C(E,H),2^I-1)end;local J=a.extract;function a.replace(E,j,H,I)I=I or 1;local K=2^I-1;j=z(j,K)local L=y(B(K,H))return z(E,L)+B(j,H)end;local M=a.replace;function a.bswap(w)local n=z(w,0xff)w=C(w,8)local o=z(w,0xff)w=C(w,8)local N=z(w,0xff)w=C(w,8)local O=z(w,0xff)return B(B(B(n,8)+o,8)+N,8)+O end;local P=a.bswap;function a.rrotate(w,D)D=D%32;local Q=z(w,2^D-1)return C(w,D)+B(Q,32-D)end;local R=a.rrotate;function a.lrotate(w,D)return R(w,-D)end;local S=a.lrotate;a.rol=a.lrotate;a.ror=a.rrotate;function a.arshift(w,D)local T=C(w,D)if w>=0x80000000 then T=T+B(2^D-1,32-D)end;return T end;local U=a.arshift;function a.btest(w,V)return z(w,V)~=0 end;a.bit32={}local function W(w)return(-1-w)%c end;a.bit32.bnot=W;local function X(n,o,N,...)local T;if o then n=n%c;o=o%c;T=x(n,o)if N then T=X(T,N,...)end;return T elseif n then return n%c else return 0 end end;a.bit32.bxor=X;local function Y(n,o,N,...)local T;if o then n=n%c;o=o%c;T=(n+o-x(n,o))/2;if N then T=Y(T,N,...)end;return T elseif n then return n%c else return d end end;a.bit32.band=Y;local function Z(n,o,N,...)local T;if o then n=n%c;o=o%c;T=d-z(d-n,d-o)if N then T=Z(T,N,...)end;return T elseif n then return n%c else return 0 end end;a.bit32.bor=Z;function a.bit32.btest(...)return Y(...)~=0 end;function a.bit32.lrotate(w,D)return S(w%c,D)end;function a.bit32.rrotate(w,D)return R(w%c,D)end;function a.bit32.lshift(w,D)if D>31 or D<-31 then return 0 end;return B(w%c,D)end;function a.bit32.rshift(w,D)if D>31 or D<-31 then return 0 end;return C(w%c,D)end;function a.bit32.arshift(w,D)w=w%c;if D>=0 then if D>31 then return w>=0x80000000 and d or 0 else local T=C(w,D)if w>=0x80000000 then T=T+B(2^D-1,32-D)end;return T end else return B(w,-D)end end;function a.bit32.extract(w,H,...)local I=...or 1;if H<0 or H>31 or I<0 or H+I>32 then error'out of range'end;w=w%c;return J(w,H,...)end;function a.bit32.replace(w,j,H,...)local I=...or 1;if H<0 or H>31 or I<0 or H+I>32 then error'out of range'end;w=w%c;j=j%c;return M(w,j,H,...)end;a.bit={}function a.bit.tobit(w)w=w%c;if w>=0x80000000 then w=w-c end;return w end;local _=a.bit.tobit;function a.bit.tohex(w,...)return G(w%c,...)end;function a.bit.bnot(w)return _(y(w%c))end;local function a0(n,o,N,...)if N then return a0(a0(n,o),N,...)elseif o then return _(A(n%c,o%c))else return _(n)end end;a.bit.bor=a0;local function a1(n,o,N,...)if N then return a1(a1(n,o),N,...)elseif o then return _(z(n%c,o%c))else return _(n)end end;a.bit.band=a1;local function a2(n,o,N,...)if N then return a2(a2(n,o),N,...)elseif o then return _(x(n%c,o%c))else return _(n)end end;a.bit.bxor=a2;function a.bit.lshift(w,E)return _(B(w%c,E%32))end;function a.bit.rshift(w,E)return _(C(w%c,E%32))end;function a.bit.arshift(w,E)return _(U(w%c,E%32))end;function a.bit.rol(w,E)return _(S(w%c,E%32))end;function a.bit.ror(w,E)return _(R(w%c,E%32))end;function a.bit.bswap(w)return _(P(w%c))end;return a end)()local unpack=table.unpack or unpack;local a3;local a4;local a5;local a6=50;local a7={[22]=18,[31]=8,[33]=28,[0]=3,[1]=13,[2]=23,[26]=33,[12]=1,[13]=6,[14]=10,[15]=16,[16]=20,[17]=26,[18]=30,[19]=36,[3]=0,[4]=2,[5]=4,[6]=7,[7]=9,[8]=12,[9]=14,[10]=17,[20]=19,[21]=22,[23]=24,[24]=27,[25]=29,[27]=32,[32]=34,[34]=37,[11]=5,[28]=11,[29]=15,[30]=21,[35]=25,[36]=31,[37]=35}local a8={[0]='ABC','ABx','ABC','ABC','ABC','ABx','ABC','ABx','ABC','ABC','ABC','ABC','ABC','ABC','ABC','ABC','ABC','ABC','ABC','ABC','ABC','ABC','AsBx','ABC','ABC','ABC','ABC','ABC','ABC','ABC','ABC','AsBx','AsBx','ABC','ABC','ABC','ABx','ABC'}local a9={[0]={b='OpArgR',c='OpArgN'},{b='OpArgK',c='OpArgN'},{b='OpArgU',c='OpArgU'},{b='OpArgR',c='OpArgN'},{b='OpArgU',c='OpArgN'},{b='OpArgK',c='OpArgN'},{b='OpArgR',c='OpArgK'},{b='OpArgK',c='OpArgN'},{b='OpArgU',c='OpArgN'},{b='OpArgK',c='OpArgK'},{b='OpArgU',c='OpArgU'},{b='OpArgR',c='OpArgK'},{b='OpArgK',c='OpArgK'},{b='OpArgK',c='OpArgK'},{b='OpArgK',c='OpArgK'},{b='OpArgK',c='OpArgK'},{b='OpArgK',c='OpArgK'},{b='OpArgK',c='OpArgK'},{b='OpArgR',c='OpArgN'},{b='OpArgR',c='OpArgN'},{b='OpArgR',c='OpArgN'},{b='OpArgR',c='OpArgR'},{b='OpArgR',c='OpArgN'},{b='OpArgK',c='OpArgK'},{b='OpArgK',c='OpArgK'},{b='OpArgK',c='OpArgK'},{b='OpArgR',c='OpArgU'},{b='OpArgR',c='OpArgU'},{b='OpArgU',c='OpArgU'},{b='OpArgU',c='OpArgU'},{b='OpArgU',c='OpArgN'},{b='OpArgR',c='OpArgN'},{b='OpArgR',c='OpArgN'},{b='OpArgN',c='OpArgU'},{b='OpArgU',c='OpArgU'},{b='OpArgN',c='OpArgN'},{b='OpArgU',c='OpArgN'},{b='OpArgU',c='OpArgN'}}local function aa(ab,s,e,d)local ac=0;for i=s,e,d do ac=ac+string.byte(ab,i,i)*256^(i-s)end;return ac end;local function ad(ae,af,ag,ah)local ai=(-1)^bit.rshift(ah,7)local aj=bit.rshift(ag,7)+bit.lshift(bit.band(ah,0x7F),1)local ak=ae+bit.lshift(af,8)+bit.lshift(bit.band(ag,0x7F),16)local al=1;if aj==0 then if ak==0 then return ai*0 else al=0;aj=1 end elseif aj==0x7F then if ak==0 then return ai*1/0 else return ai*0/0 end end;return ai*2^(aj-127)*(1+al/2^23)end;local function am(ae,af,ag,ah,an,ao,ap,aq)local ai=(-1)^bit.rshift(aq,7)local aj=bit.lshift(bit.band(aq,0x7F),4)+bit.rshift(ap,4)local ak=bit.band(ap,0x0F)*2^48;local al=1;ak=ak+ao*2^40+an*2^32+ah*2^24+ag*2^16+af*2^8+ae;if aj==0 then if ak==0 then return ai*0 else al=0;aj=1 end elseif aj==0x7FF then if ak==0 then return ai*1/0 else return ai*0/0 end end;return ai*2^(aj-1023)*(al+ak/2^52)end;local function ar(ab,s,e)return aa(ab,s,e-1,1)end;local function as(ab,s,e)return aa(ab,e-1,s,-1)end;local function at(ab,s)return ad(string.byte(ab,s,s+3))end;local function au(ab,s)local ae,af,ag,ah=string.byte(ab,s,s+3)return ad(ah,ag,af,ae)end;local function av(ab,s)return am(string.byte(ab,s,s+7))end;local function aw(ab,s)local ae,af,ag,ah,an,ao,ap,aq=string.byte(ab,s,s+7)return am(aq,ap,ao,an,ah,ag,af,ae)end;local ax={[4]={little=at,big=au},[8]={little=av,big=aw}}local function ay(S)local az=S.index;local aA=string.byte(S.source,az,az)S.index=az+1;return aA end;local function aB(S,aC)local aD=S.index+aC;local aE=string.sub(S.source,S.index,aD-1)S.index=aD;return aE end;local function aF(S)local aC=S:s_szt()local aE;if aC~=0 then aE=string.sub(aB(S,aC),1,-2)end;return aE end;local function aG(aC,aH)return function(S)local aD=S.index+aC;local aI=aH(S.source,S.index,aD)S.index=aD;return aI end end;local function aJ(aC,aH)return function(S)local aK=aH(S.source,S.index)S.index=S.index+aC;return aK end end;local function aL(S)local aM=S:s_int()local aN={}for i=1,aM do local aO=S:s_ins()local aP=bit.band(aO,0x3F)local aQ=a8[aP]local aR=a9[aP]local aS={value=aO,op=a7[aP],A=bit.band(bit.rshift(aO,6),0xFF)}if aQ=='ABC'then aS.B=bit.band(bit.rshift(aO,23),0x1FF)aS.C=bit.band(bit.rshift(aO,14),0x1FF)aS.is_KB=aR.b=='OpArgK'and aS.B>0xFF;aS.is_KC=aR.c=='OpArgK'and aS.C>0xFF elseif aQ=='ABx'then aS.Bx=bit.band(bit.rshift(aO,14),0x3FFFF)aS.is_K=aR.b=='OpArgK'elseif aQ=='AsBx'then aS.sBx=bit.band(bit.rshift(aO,14),0x3FFFF)-131071 end;aN[i]=aS end;return aN end;local function aT(S)local aM=S:s_int()local aU={}for i=1,aM do local aV=ay(S)local k;if aV==1 then k=ay(S)~=0 elseif aV==3 then k=S:s_num()elseif aV==4 then k=aF(S)end;aU[i]=k end;return aU end;local function aW(S,ab)local aM=S:s_int()local aX={}for i=1,aM do aX[i]=a5(S,ab)end;return aX end;local function aY(S)local aM=S:s_int()local aZ={}for i=1,aM do aZ[i]=S:s_int()end;return aZ end;local function a_(S)local aM=S:s_int()local b0={}for i=1,aM do b0[i]={varname=aF(S),startpc=S:s_int(),endpc=S:s_int()}end;return b0 end;local function b1(S)local aM=S:s_int()local b2={}for i=1,aM do b2[i]=aF(S)end;return b2 end;function a5(S,b3)local b4={}local ab=aF(S)or b3;b4.source=ab;S:s_int()S:s_int()b4.numupvals=ay(S)b4.numparams=ay(S)ay(S)ay(S)b4.code=aL(S)b4.const=aT(S)b4.subs=aW(S,ab)b4.lines=aY(S)a_(S)b1(S)for _,v in ipairs(b4.code)do if v.is_K then v.const=b4.const[v.Bx+1]else if v.is_KB then v.const_B=b4.const[v.B-0xFF]end;if v.is_KC then v.const_C=b4.const[v.C-0xFF]end end end;return b4 end;function a3(ab)local b5;local b6;local b7;local b8;local b9;local ba;local bb;local bc={index=1,source=ab}assert(aB(bc,4)=='\27Lua','invalid Lua signature')assert(ay(bc)==0x51,'invalid Lua version')assert(ay(bc)==0,'invalid Lua format')b6=ay(bc)~=0;b7=ay(bc)b8=ay(bc)b9=ay(bc)ba=ay(bc)bb=ay(bc)~=0;b5=b6 and ar or as;bc.s_int=aG(b7,b5)bc.s_szt=aG(b8,b5)bc.s_ins=aG(b9,b5)if bb then bc.s_num=aG(ba,b5)elseif ax[ba]then bc.s_num=aJ(ba,ax[ba][b6 and'little'or'big'])else error('unsupported float size')end;return a5(bc,'@virtual')end;local function bd(be,bf)for i,bg in pairs(be)do if bg.index>=bf then bg.value=bg.store[bg.index]bg.store=bg;bg.index='value'be[i]=nil end end end;local function bh(be,bf,bi)local bj=be[bf]if not bj then bj={index=bf,store=bi}be[bf]=bj end;return bj end;local function bk(...)return select('#',...),{...}end;local function bl(bm,bn)local ab=bm.source;local bo=bm.lines[bm.pc-1]local b3,bp,bq=string.match(bn,'^(.-):(%d+):%s+(.+)')local br='%s:%i: [%s:%i] %s'bo=bo or'0'b3=b3 or'?'bp=bp or'0'bq=bq or bn;error(string.format(br,ab,bo,b3,bp,bq),0)end;local function bs(bm)local aN=bm.code;local bt=bm.subs;local bu=bm.env;local bv=bm.upvals;local bw=bm.varargs;local bx=-1;local by={}local bi=bm.stack;local bz=bm.pc;while true do local bA=aN[bz]local aP=bA.op;bz=bz+1;if aP<18 then if aP<8 then if aP<3 then if aP<1 then for i=bA.A,bA.B do bi[i]=nil end elseif aP>1 then local bg=bv[bA.B]bi[bA.A]=bg.store[bg.index]else local bB,bC;if bA.is_KB then bB=bA.const_B else bB=bi[bA.B]end;if bA.is_KC then bC=bA.const_C else bC=bi[bA.C]end;bi[bA.A]=bB+bC end elseif aP>3 then if aP<6 then if aP>4 then local A=bA.A;local B=bA.B;local bf;if bA.is_KC then bf=bA.const_C else bf=bi[bA.C]end;bi[A+1]=bi[B]bi[A]=bi[B][bf]else bi[bA.A]=bu[bA.const]end elseif aP>6 then local bf;if bA.is_KC then bf=bA.const_C else bf=bi[bA.C]end;bi[bA.A]=bi[bA.B][bf]else local bB,bC;if bA.is_KB then bB=bA.const_B else bB=bi[bA.B]end;if bA.is_KC then bC=bA.const_C else bC=bi[bA.C]end;bi[bA.A]=bB-bC end else bi[bA.A]=bi[bA.B]end elseif aP>8 then if aP<13 then if aP<10 then bu[bA.const]=bi[bA.A]elseif aP>10 then if aP<12 then local A=bA.A;local B=bA.B;local C=bA.C;local bD;local bE,bF;if B==0 then bD=bx-A else bD=B-1 end;bE,bF=bk(bi[A](unpack(bi,A+1,A+bD)))if C==0 then bx=A+bE-1 else bE=C-1 end;for i=1,bE do bi[A+i-1]=bF[i]end else local bg=bv[bA.B]bg.store[bg.index]=bi[bA.A]end else local bB,bC;if bA.is_KB then bB=bA.const_B else bB=bi[bA.B]end;if bA.is_KC then bC=bA.const_C else bC=bi[bA.C]end;bi[bA.A]=bB*bC end elseif aP>13 then if aP<16 then if aP>14 then local A=bA.A;local B=bA.B;local bD;if B==0 then bD=bx-A else bD=B-1 end;bd(by,0)return bk(bi[A](unpack(bi,A+1,A+bD)))else local bf,bG;if bA.is_KB then bf=bA.const_B else bf=bi[bA.B]end;if bA.is_KC then bG=bA.const_C else bG=bi[bA.C]end;bi[bA.A][bf]=bG end elseif aP>16 then bi[bA.A]={}else local bB,bC;if bA.is_KB then bB=bA.const_B else bB=bi[bA.B]end;if bA.is_KC then bC=bA.const_C else bC=bi[bA.C]end;bi[bA.A]=bB/bC end else bi[bA.A]=bA.const end else local A=bA.A;local bH=bi[A+2]local bf=bi[A]+bH;local bI=bi[A+1]local bJ;if bH==math.abs(bH)then bJ=bf<=bI else bJ=bf>=bI end;if bJ then bi[bA.A]=bf;bi[bA.A+3]=bf;bz=bz+bA.sBx end end elseif aP>18 then if aP<28 then if aP<23 then if aP<20 then bi[bA.A]=#bi[bA.B]elseif aP>20 then if aP<22 then local A=bA.A;local B=bA.B;local bK={}local aM;if B==0 then aM=bx-A+1 else aM=B-1 end;for i=1,aM do bK[i]=bi[A+i-1]end;bd(by,0)return aM,bK else local aE=bi[bA.B]for i=bA.B+1,bA.C do aE=aE..bi[i]end;bi[bA.A]=aE end else local bB,bC;if bA.is_KB then bB=bA.const_B else bB=bi[bA.B]end;if bA.is_KC then bC=bA.const_C else bC=bi[bA.C]end;bi[bA.A]=bB%bC end elseif aP>23 then if aP<26 then if aP>24 then bd(by,bA.A)else local bB,bC;if bA.is_KB then bB=bA.const_B else bB=bi[bA.B]end;if bA.is_KC then bC=bA.const_C else bC=bi[bA.C]end;if bB==bC==(bA.A~=0)then bz=bz+aN[bz].sBx end;bz=bz+1 end elseif aP>26 then local bB,bC;if bA.is_KB then bB=bA.const_B else bB=bi[bA.B]end;if bA.is_KC then bC=bA.const_C else bC=bi[bA.C]end;if bB<bC==(bA.A~=0)then bz=bz+aN[bz].sBx end;bz=bz+1 else local bB,bC;if bA.is_KB then bB=bA.const_B else bB=bi[bA.B]end;if bA.is_KC then bC=bA.const_C else bC=bi[bA.C]end;bi[bA.A]=bB^bC end else bi[bA.A]=bA.B~=0;if bA.C~=0 then bz=bz+1 end end elseif aP>28 then if aP<33 then if aP<30 then local bB,bC;if bA.is_KB then bB=bA.const_B else bB=bi[bA.B]end;if bA.is_KC then bC=bA.const_C else bC=bi[bA.C]end;if bB<=bC==(bA.A~=0)then bz=bz+aN[bz].sBx end;bz=bz+1 elseif aP>30 then if aP<32 then local aX=bt[bA.Bx+1]local bL=aX.numupvals;local bM;if bL~=0 then bM={}for i=1,bL do local bN=aN[bz+i-1]if bN.op==a7[0]then bM[i-1]=bh(by,bN.B,bi)elseif bN.op==a7[4]then bM[i-1]=bv[bN.B]end end;bz=bz+bL end;bi[bA.A]=a4(aX,bu,bM)else local A=bA.A;local B=bA.B;if not bi[B]==(bA.C~=0)then bz=bz+1 else bi[A]=bi[B]end end else bi[bA.A]=-bi[bA.B]end elseif aP>33 then if aP<36 then if aP>34 then local A=bA.A;local aM=bA.B;if aM==0 then aM=bw.size;bx=A+aM-1 end;for i=1,aM do bi[A+i-1]=bw.list[i]end else local A=bA.A;local bO,bI,bH;bO=assert(tonumber(bi[A]),'`for` initial value must be a number')bI=assert(tonumber(bi[A+1]),'`for` limit must be a number')bH=assert(tonumber(bi[A+2]),'`for` step must be a number')bi[A]=bO-bH;bi[A+1]=bI;bi[A+2]=bH;bz=bz+bA.sBx end elseif aP>36 then local A=bA.A;local C=bA.C;local aM=bA.B;local bP=bi[A]local bQ;if aM==0 then aM=bx-A end;if C==0 then C=bA[bz].value;bz=bz+1 end;bQ=(C-1)*a6;for i=1,aM do bP[i+bQ]=bi[A+i]end else bi[bA.A]=not bi[bA.B]end else if not bi[bA.A]==(bA.C~=0)then bz=bz+1 end end else local A=bA.A;local aH=bi[A]local bR=bi[A+1]local bf=bi[A+2]local bS=A+3;local bK;bi[bS+2]=bf;bi[bS+1]=bR;bi[bS]=aH;bK={aH(bR,bf)}for i=1,bA.C do bi[bS+i-1]=bK[i]end;if bi[bS]~=nil then bi[A+2]=bi[bS]else bz=bz+1 end end else bz=bz+bA.sBx end;bm.pc=bz end end;function a4(bR,bu,b2)local bT=bR.code;local bU=bR.subs;local bV=bR.lines;local bW=bR.source;local bX=bR.numparams;local function bY(...)local bi={}local bZ={}local b_=0;local c0,c1=bk(...)local bm;local c2,bn,bK;for i=1,bX do bi[i-1]=c1[i]end;if bX<c0 then b_=c0-bX;for i=1,b_ do bZ[i]=c1[bX+i]end end;bm={varargs={list=bZ,size=b_},code=bT,subs=bU,lines=bV,source=bW,env=bu,upvals=b2,stack=bi,pc=1}c2,bn,bK=pcall(bs,bm,...)if c2 then return unpack(bK,1,bn)else bl(bm,bn)end;return end;return bY end;return function(c3,bu)return a4(a3(c3),bu or fev(0))end end)();local zeltlIIllIll='\101\108\73\57\77\88\78\110\76\49\115\108\85\81\61\61';local zeltlIIlIIIl="\109\89\71\113\67\83\80\55\78\81\105\87\89\66\90\56\116\72\65\56\89\102\100\51\74\71\113\79\85\51\57\111\82\70\49\103\43\88\88\54\103\107\54\49\65\80\97\83\110\77\73\115\103\107\97\80\117\107\81\49\88\86\105\77\48\105\105\83\75\71\98\48\112\105\66\68\68\112\74\67\73\84\73\101\49\54\121\98\70\114\57\79\67\102\110\47\80\121\50\82\82\65\112\54\87\68\82\54\69\74\71\103\103\80\109\55\68\120\74\65\116\120\120\65\65\108\55\97\113\101\81\72\103\54\51\70\103\103\79\81\77\43\69\48\83\74\84\47\122\106\70\78\112\67\56\83\80\82\112\102\82\57\86\71\104\120\104\120\115\108\65\77\50\121\111\54\102\115\121\87\85\43\118\88\119\82\107\81\122\112\71\79\56\47\66\79\116\110\66\89\73\71\68\56\105\89\75\76\68\50\100\47\111\75\112\68\114\114\47\70\53\113\70\106\100\86\79\97\66\72\74\121\102\88\118\102\80\52\98\101\101\48\73\57\120\67\84\54\43\101\120\54\51\72\89\102\81\79\49\84\67\56\80\52\71\106\69\111\102\105\102\84\43\104\43\85\56\54\88\104\122\105\53\43\111\75\68\117\107\77\101\87\51\70\90\122\89\103\80\78\113\113\71\122\71\76\118\117\49\69\102\89\120\86\111\116\90\107\68\120\43\76\82\109\119\121\118\115\85\108\90\47\72\65\115\101\69\71\73\54\53\70\73\50\120\106\85\78\98\119\75\112\76\57\99\68\106\50\101\117\84\69\71\51\69\52\101\76\107\110\98\122\79\113\72\115\100\82\108\55\84\69\55\52\49\76\78\108\55\111\86\112\74\78\114\56\74\83\114\101\119\122\104\49\69\81\107\65\73\90\99\88\76\71\50\108\117\67\112\79\100\99\104\111\102\110\114\107\112\86\112\83\97\43\67\50\54\106\72\75\106\119\82\102\108\112\99\69\80\98\119\120\97\103\70\71\90\109\77\52\48\118\107\56\55\81\122\84\71\89\71\118\53\109\53\73\103\50\87\98\107\103\114\98\114\116\106\105\107\90\85\66\106\87\111\87\72\76\79\65\107\83\86\47\54\98\90\86\97\119\72\113\54\48\56\88\71\69\73\78\100\115\67\55\109\75\88\88\107\120\118\52\121\66\84\68\119\86\89\69\119\82\70\52\111\120\112\66\122\99\72\104\51\87\70\114\102\110\67\50\90\89\72\99\100\119\81\51\97\101\112\89\119\119\79\56\75\112\81\56\72\75\105\98\99\101\73\48\97\118\79\108\79\114\98\115\43\85\49\50\113\106\117\86\108\90\55\107\73\97\79\56\55\85\112\57\116\112\72\113\68\111\109\77\47\84\73\78\67\97\82\74\109\122\101\89\100\78\89\109\111\110\107\108\117\67\103\121\97\69\104\85\115\83\97\90\105\76\118\48\78\101\67\74\74\80\104\56\115\74\54\119\81\76\114\112\80\69\89\49\83\114\112\115\48\106\49\113\98\98\73\66\87\71\54\82\101\73\100\115\50\51\76\56\104\71\79\105\108\106\122\73\122\72\114\68\72\74\104\108\79\65\97\67\87\86\116\49\79\99\90\48\112\121\122\57\117\71\98\43\113\86\117\117\84\90\97\69\70\53\114\110\79\68\54\109\75\47\101\112\66\88\74\83\100\81\55\78\57\65\114\98\102\80\47\68\97\103\102\107\97\83\119\43\101\119\57\49\109\71\108\49\121\47\48\80\77\86\111\70\73\50\55\84\105\101\100\83\56\121\90\55\65\66\82\49\97\103\84\57\100\48\100\82\90\79\71\104\84\71\99\81\118\43\78\68\106\69\56\65\52\109\67\52\116\84\99\78\103\77\99\83\73\108\105\69\99\100\111\79\80\90\72\106\99\47\109\55\66\120\112\81\104\103\43\117\81\83\70\78\102\54\54\116\90\47\99\70\54\99\81\48\70\75\97\97\85\116\75\120\100\116\78\50\105\110\73\117\48\101\97\107\115\57\87\83\116\105\85\83\48\50\97\122\55\68\81\106\82\108\50\88\87\74\109\109\74\121\69\121\75\98\65\104\100\79\88\43\87\56\71\108\107\52\56\78\103\102\109\105\75\81\111\69\68\113\111\57\110\104\113\43\47\74\84\115\119\69\115\78\81\109\66\71\70\50\122\68\70\100\98\48\74\81\52\56\90\99\65\81\121\54\83\54\47\43\88\47\53\86\48\82\80\105\103\51\51\77\117\52\57\54\102\89\114\121\72\118\113\78\99\114\118\52\78\66\74\51\115\70\119\76\72\113\100\86\100\88\56\49\78\100\122\105\97\53\107\119\107\65\111\90\48\102\49\107\121\80\97\76\57\90\43\67\107\53\113\74\112\104\99\101\117\73\108\116\70\78\53\85\105\82\84\78\121\114\112\105\104\110\86\73\97\87\66\54\114\88\55\84\73\105\76\104\106\52\69\119\48\72\111\110\107\100\70\98\110\73\79\80\90\119\122\114\72\54\67\69\71\71\75\52\79\82\116\74\81\104\77\101\87\72\114\73\88\69\67\49\99\90\78\73\57\86\88\118\114\115\98\105\73\55\90\104\53\51\115\76\119\80\114\89\43\114\106\100\51\87\52\120\71\47\53\74\66\81\82\88\56\54\109\89\121\109\106\52\99\117\107\110\56\79\87\74\74\113\110\57\50\120\120\100\98\77\65\54\85\78\105\66\112\48\112\100\83\80\119\97\98\81\65\100\104\84\88\88\76\122\111\49\111\109\47\68\106\70\110\70\86\77\52\116\107\78\76\84\51\54\102\104\80\102\53\66\72\103\67\122\115\50\102\84\50\66\73\111\48\80\86\84\115\112\70\47\43\117\122\71\80\69\47\74\100\109\106\73\112\57\54\78\73\73\115\72\117\98\71\104\47\108\99\76\115\119\47\113\77\111\81\117\103\50\119\98\67\53\85\81\71\98\84\52\116\90\65\80\66\56\57\111\109\68\89\100\122\120\82\56\75\97\109\53\71\117\55\87\112\110\74\77\54\103\110\69\105\100\82\76\99\108\75\105\54\55\121\48\76\68\43\75\55\69\101\90\86\104\82\72\48\76\100\81\106\103\71\48\89\89\81\115\43\86\111\66\48\103\73\115\67\73\115\103\102\76\117\51\100\65\47\78\55\101\104\88\75\112\119\49\98\104\76\73\73\69\51\65\122\76\52\43\89\83\56\72\82\100\119\73\72\83\103\85\52\56\108\110\110\78\120\49\100\102\106\97\80\114\113\53\85\110\110\102\47\97\73\115\77\102\114\43\114\107\90\117\57\68\68\81\84\48\117\65\53\82\71\90\116\73\54\97\68\49\115\75\98\102\52\108\75\74\53\50\110\112\112\86\113\117\119\72\112\88\107\57\105\88\54\49\72\78\121\66\88\52\56\83\57\87\116\85\103\53\103\119\119\57\97\117\121\51\121\83\81\78\122\70\97\80\53\73\88\106\112\51\106\99\65\85\109\81\80\113\80\104\88\71\117\66\79\82\98\84\57\57\89\71\80\115\51\78\50\103\48\107\48\43\119\74\47\78\71\85\97\120\51\73\98\80\73\78\55\117\117\70\87\87\43\107\47\101\86\102\117\84\90\55\108\99\54\85\103\54\71\100\106\118\101\79\86\47\51\51\78\111\121\110\53\86\85\73\88\78\50\106\84\83\103\74\47\90\116\89\75\53\87\79\106\101\88\73\115\114\112\72\80\90\111\98\47\80\75\82\84\85\74\47\57\117\121\73\80\67\82\78\84\78\70\88\116\101\113\56\102\116\119\114\86\74\47\101\65\121\122\70\90\114\65\86\82\55\110\84\119\82\79\67\109\122\116\57\56\80\106\118\81\50\102\86\110\85\75\57\77\101\110\67\82\69\74\48\107\113\97\48\74\104\101\57\114\52\98\121\57\70\73\74\121\89\68\50\89\106\55\111\112\87\86\114\55\115\107\66\117\69\75\77\50\75\70\71\120\78\90\120\113\51\82\56\69\90\74\68\98\121\111\100\121\119\52\89\115\70\54\86\104\115\48\68\118\89\69\99\80\116\68\71\89\86\98\122\69\120\77\73\114\97\85\121\88\85\89\104\80\109\88\85\86\85\51\43\121\76\49\78\102\100\68\76\119\47\117\56\53\112\82\49\107\50\53\86\105\83\104\68\52\52\54\66\104\49\57\49\112\110\118\43\103\69\104\120\85\84\78\74\122\115\73\67\56\113\71\82\82\72\74\118\103\83\86\80\57\71\90\98\87\65\43\73\74\88\70\105\107\85\68\83\117\78\104\107\74\116\115\68\86\90\89\48\97\43\57\86\87\55\47\110\107\116\68\73\68\119\73\56\105\85\74\66\68\83\108\89\74\89\83\51\81\121\103\105\66\65\51\103\117\77\119\66\113\68\82\116\117\71\80\52\79\72\121\116\54\80\56\79\102\103\84\52\52\76\119\73\104\71\97\107\66\102\54\115\116\100\71\78\53\71\88\79\82\68\109\98\102\85\83\102\71\110\109\113\76\99\53\74\100\56\80\90\80\119\108\77\121\111\47\104\106\49\68\86\103\100\107\89\75\82\84\55\47\72\69\69\115\47\49\98\108\68\66\65\113\121\74\102\108\114\111\73\116\103\116\90\107\118\90\118\48\74\49\78\105\67\76\72\110\75\49\119\85\77\90\115\110\52\122\122\55\107\103\114\71\51\112\106\115\65\119\122\52\49\76\74\43\50\54\102\104\122\54\81\116\73\118\112\78\55\115\70\101\99\85\72\120\104\119\90\85\114\110\78\108\116\67\116\90\79\113\98\112\109\55\86\100\122\114\109\102\80\83\78\115\109\103\110\53\120\85\116\80\71\116\69\71\82\90\55\87\87\119\55\117\88\111\54\121\81\84\100\48\101\85\122\112\111\99\83\98\70\67\71\70\110\108\57\116\103\87\78\75\79\49\121\70\115\57\89\76\110\99\56\65\83\49\49\115\100\56\43\104\122\79\110\55\71\56\112\76\78\51\119\99\117\80\74\75\83\114\100\54\47\100\55\117\53\66\82\111\70\86\53\101\121\73\114\74\120\51\87\89\114\99\79\107\85\121\51\119\120\98\83\121\114\56\105\120\105\110\86\122\54\65\109\109\57\83\73\56\97\113\48\122\78\86\72\101\67\108\77\67\117\104\105\76\83\51\65\47\107\69\43\99\120\114\78\89\108\47\120\99\104\54\82\84\104\103\47\121\78\117\47\71\121\109\78\88\119\85\77\75\88\73\66\74\85\99\109\76\84\53\106\120\79\73\109\85\100\117\104\73\73\99\85\102\103\74\72\78\109\113\55\107\112\87\75\119\69\88\75\107\97\119\99\86\53\108\119\119\66\47\79\55\78\107\77\73\49\111\80\85\99\88\116\99\90\111\55\105\100\109\108\103\102\79\54\121\82\55\86\121\52\52\105\89\97\85\51\68\122\87\90\103\65\77\116\53\69\53\115\90\115\115\79\83\111\82\79\98\49\73\78\73\47\117\82\47\68\71\79\86\76\78\57\120\101\57\112\120\108\55\75\104\109\71\74\105\68\86\74\81\71\103\49\121\49\99\71\53\89\83\112\86\49\117\75\120\88\122\84\43\104\99\89\109\87\84\97\75\73\50\75\67\84\80\71\84\97\116\105\72\75\72\113\55\103\53\115\108\122\43\43\116\97\84\122\79\79\101\99\84\75\104\105\47\84\102\111\80\53\82\74\111\100\99\111\53\107\114\101\67\77\102\90\87\119\81\85\55\77\68\109\122\48\43\47\97\113\56\101\49\49\82\120\48\66\118\82\112\66\111\68\108\105\47\97\89\116\87\121\114\73\71\97\73\69\51\47\77\43\65\66\85\121\89\68\51\57\108\56\106\102\66\117\79\67\54\74\111\81\43\75\89\43\70\119\105\79\89\100\71\113\116\75\80\86\83\111\115\68\109\84\105\65\121\86\77\89\98\65\114\105\75\100\103\86\121\104\116\78\102\122\49\83\107\65\100\71\43\97\49\82\72\111\85\75\106\55\80\69\66\110\70\52\78\99\77\118\113\69\113\119\106\66\86\87\119\105\121\112\83\84\84\89\104\108\48\78\76\56\74\70\85\69\102\47\79\57\98\107\66\53\86\81\80\107\49\54\77\120\47\114\57\119\119\78\83\54\106\98\73\117\84\79\51\56\100\118\117\83\88\52\65\114\102\121\57\69\72\118\55\119\47\81\70\87\89\81\47\53\103\79\83\106\68\89\108\66\51\79\68\51\73\71\76\65\55\114\104\82\71\68\120\97\122\52\102\72\50\78\56\56\108\116\85\87\78\86\99\77\76\78\118\107\82\109\98\110\50\76\108\57\66\49\107\102\72\51\83\87\102\110\100\48\68\82\99\106\75\110\113\53\82\107\119\79\117\88\84\53\119\103\120\57\52\47\120\66\90\111\67\88\76\117\75\108\74\115\56\86\110\121\76\102\48\89\80\56\101\43\52\121\89\80\121\102\103\105\105\57\68\122\55\122\112\105\120\73\88\84\103\43\86\55\65\102\79\105\80\122\112\115\116\55\118\88\72\50\68\119\43\70\76\48\71\117\100\81\50\119\101\85\71\87\72\51\120\71\73\47\70\79\118\121\120\84\117\65\100\118\77\117\75\57\104\52\90\55\121\68\84\112\49\110\101\81\51\57\68\82\114\98\43\49\103\67\78\83\105\120\117\54\100\47\119\85\87\108\71\78\55\66\111\122\99\115\115\50\115\55\99\87";local zeltlIIllIII='cGdGMyktdmIsIzp7eE5xViI=';local zeltlIIllIIl='\122\101\108\116';local zeltlIIlIIlI=function(a,b)local c=zeltlIIlIlIl(zeltlIIlIllI(a))local d=c["\99\105\112\104\101\114"](c,zeltlIIlIllI(b))return zeltlIIlIllI(d)end;local zeltlIIllIIl='\122\101\108\116';local zeltlIIllIll='\101\108\73\57\77\88\78\110\76\49\115\108\85\81\61\61';local zeltlIIllIlI='QHZiQkloTlA+cEtBQWl3MDMzUA==';local zeltlIIlIIII='Oz8/NGtZYjtDaUkrRkErWloyOyNzUyVycTolSjNqJDQwaE4=bi12PyZmUDh0RiF1';function zeltlIIlIlll(a,b)local c=zeltlIIlIllI(a,b);local d=zeltlIIllIlI;return c,d end;return zeltlIIlIlII(zeltlIIlIIlI(zeltlIIllIll,zeltlIIlIIIl),getfenv(0))()end)()
